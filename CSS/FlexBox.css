
@media screen and (min-width: 768px) {
        
    .container-1{
        display: flex;
        /* align-items: flex-start; NB: center(NOT flex-center). All flex elements are by default 'stretch' (same height) */
        flex-direction: row;
        justify-content: space-around;  /*Default is flex-start*/
        background: wheat;
    }
    
    .container-2{
        background: rgb(216, 186, 186);
        display: flex;
        justify-content: space-between;
        margin-top: 10px;
    }

}

    .container-1 div, .container-2 div, .container-3 div{
        border: 1px solid #ccc;
        padding: 10px;
        margin: 10px 0;        
    }    


/* ========================== Container-1 ================================ */

.box-1{
    flex: 2;    /* This is similar to weight in Android studio's Linear layout. %ge can be used. ie: flex: 50% */
    order: 2;   /* Like the name implies, order of arrangement */
    /* flex-basis: 30%;    Similar to 'width' */
}


/* ========================== Container-1  =============================== */

.box-2{
    flex: 1;
    order: 3;
    /* flex-basis: 30%;    Similar to 'width' */
}

.box-3{
    flex: 1;
    order: 1;
    /* flex-basis: 30%;    Similar to 'width' */
}


/* ========================== Container-2  =============================== */


.container-2-box{
    background: white;
    flex-basis: 25%;
}


/* ========================== Container-3  =============================== */

.container-3{
    background: rgb(139, 111, 111);
    display: flex;
    justify-content: space-between;
    margin-top: 10px;
    flex-wrap: wrap;
}

.container-3-box{
    flex-basis: 12%;
}